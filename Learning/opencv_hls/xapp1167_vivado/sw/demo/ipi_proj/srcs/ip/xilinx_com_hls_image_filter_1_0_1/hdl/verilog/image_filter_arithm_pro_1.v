// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module image_filter_arithm_pro_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read,
        src_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n,
        src_data_stream_2_V_read,
        dst_rows_V_read,
        dst_cols_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n,
        dst_data_stream_2_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st6_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv9_1CE = 9'b111001110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
input  [7:0] src_data_stream_1_V_dout;
input   src_data_stream_1_V_empty_n;
output   src_data_stream_1_V_read;
input  [7:0] src_data_stream_2_V_dout;
input   src_data_stream_2_V_empty_n;
output   src_data_stream_2_V_read;
input  [11:0] dst_rows_V_read;
input  [11:0] dst_cols_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
output  [7:0] dst_data_stream_2_V_din;
input   dst_data_stream_2_V_full_n;
output   dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_0_V_read;
reg src_data_stream_1_V_read;
reg src_data_stream_2_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg dst_data_stream_2_V_write;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [10:0] p_7_reg_154;
wire   [0:0] exitcond7_fu_170_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_69;
wire   [10:0] i_V_fu_175_p2;
reg   [10:0] i_V_reg_300;
wire   [0:0] exitcond8_fu_185_p2;
reg   [0:0] exitcond8_reg_305;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_80;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_94;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_305_pp0_it1;
reg    ap_sig_bdd_108;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [10:0] j_V_fu_190_p2;
reg   [7:0] tmp_18_reg_314;
reg   [7:0] tmp_19_reg_319;
reg   [7:0] tmp_20_reg_324;
reg   [10:0] p_s_reg_143;
reg    ap_sig_cseq_ST_st6_fsm_3;
reg    ap_sig_bdd_141;
wire   [11:0] p_cast_fu_166_p1;
wire   [11:0] p_7_cast_fu_181_p1;
wire   [8:0] lhs_V_fu_196_p1;
wire   [8:0] p_Val2_9_fu_199_p2;
wire   [0:0] tmp_fu_205_p3;
wire   [7:0] p_Val2_10_fu_213_p1;
wire   [8:0] lhs_V_1_fu_226_p1;
wire   [8:0] p_Val2_12_fu_229_p2;
wire   [0:0] tmp_11_fu_235_p3;
wire   [7:0] p_Val2_13_fu_243_p1;
wire   [8:0] lhs_V_2_fu_256_p1;
wire   [8:0] p_Val2_s_fu_259_p2;
wire   [0:0] tmp_13_fu_265_p3;
wire   [7:0] p_Val2_15_fu_273_p1;
reg   [3:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond8_fu_185_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_170_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond8_fu_185_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_170_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond8_fu_185_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_170_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond8_fu_185_p2 == ap_const_lv1_0))) begin
        p_7_reg_154 <= j_V_fu_190_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_170_p2 == ap_const_lv1_0))) begin
        p_7_reg_154 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        p_s_reg_143 <= ap_const_lv11_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_3)) begin
        p_s_reg_143 <= i_V_reg_300;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond8_reg_305_pp0_it1 <= exitcond8_reg_305;
        exitcond8_reg_305 <= exitcond8_fu_185_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_300 <= i_V_fu_175_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond8_reg_305 == ap_const_lv1_0) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_18_reg_314 <= src_data_stream_0_V_dout;
        tmp_19_reg_319 <= src_data_stream_1_V_dout;
        tmp_20_reg_324 <= src_data_stream_2_V_dout;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or exitcond7_fu_170_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond7_fu_170_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond7_fu_170_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond7_fu_170_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_80)
begin
    if (ap_sig_bdd_80) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_69)
begin
    if (ap_sig_bdd_69) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_3 assign process. ///
always @ (ap_sig_bdd_141)
begin
    if (ap_sig_bdd_141) begin
        ap_sig_cseq_ST_st6_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_3 = ap_const_logic_0;
    end
end

/// dst_data_stream_0_V_write assign process. ///
always @ (ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond8_reg_305_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_305_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        dst_data_stream_0_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_0_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_1_V_write assign process. ///
always @ (ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond8_reg_305_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_305_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        dst_data_stream_1_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_1_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_2_V_write assign process. ///
always @ (ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond8_reg_305_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_305_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        dst_data_stream_2_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_2_V_write = ap_const_logic_0;
    end
end

/// src_data_stream_0_V_read assign process. ///
always @ (exitcond8_reg_305 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond8_reg_305 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        src_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_0_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_1_V_read assign process. ///
always @ (exitcond8_reg_305 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond8_reg_305 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        src_data_stream_1_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_1_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_2_V_read assign process. ///
always @ (exitcond8_reg_305 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond8_reg_305 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        src_data_stream_2_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_2_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond7_fu_170_p2 or exitcond8_fu_185_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_94 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_108 or ap_reg_ppiten_pp0_it2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond7_fu_170_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond8_fu_185_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_94 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond8_fu_185_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st6_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_108 assign process. ///
always @ (dst_data_stream_0_V_full_n or dst_data_stream_1_V_full_n or dst_data_stream_2_V_full_n or ap_reg_ppstg_exitcond8_reg_305_pp0_it1)
begin
    ap_sig_bdd_108 = (((dst_data_stream_0_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_305_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_305_pp0_it1) & (dst_data_stream_1_V_full_n == ap_const_logic_0)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond8_reg_305_pp0_it1) & (dst_data_stream_2_V_full_n == ap_const_logic_0)));
end

/// ap_sig_bdd_141 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_141 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_69 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_69 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_80 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_80 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_94 assign process. ///
always @ (src_data_stream_0_V_empty_n or src_data_stream_1_V_empty_n or src_data_stream_2_V_empty_n or exitcond8_reg_305)
begin
    ap_sig_bdd_94 = (((src_data_stream_0_V_empty_n == ap_const_logic_0) & (exitcond8_reg_305 == ap_const_lv1_0)) | ((exitcond8_reg_305 == ap_const_lv1_0) & (src_data_stream_1_V_empty_n == ap_const_logic_0)) | ((exitcond8_reg_305 == ap_const_lv1_0) & (src_data_stream_2_V_empty_n == ap_const_logic_0)));
end
assign dst_data_stream_0_V_din = ((tmp_fu_205_p3)? ap_const_lv8_0: p_Val2_10_fu_213_p1);
assign dst_data_stream_1_V_din = ((tmp_11_fu_235_p3)? ap_const_lv8_0: p_Val2_13_fu_243_p1);
assign dst_data_stream_2_V_din = ((tmp_13_fu_265_p3)? ap_const_lv8_0: p_Val2_15_fu_273_p1);
assign exitcond7_fu_170_p2 = (p_cast_fu_166_p1 == dst_rows_V_read? 1'b1: 1'b0);
assign exitcond8_fu_185_p2 = (p_7_cast_fu_181_p1 == dst_cols_V_read? 1'b1: 1'b0);
assign i_V_fu_175_p2 = (p_s_reg_143 + ap_const_lv11_1);
assign j_V_fu_190_p2 = (p_7_reg_154 + ap_const_lv11_1);
assign lhs_V_1_fu_226_p1 = tmp_19_reg_319;
assign lhs_V_2_fu_256_p1 = tmp_20_reg_324;
assign lhs_V_fu_196_p1 = tmp_18_reg_314;
assign p_7_cast_fu_181_p1 = p_7_reg_154;
assign p_Val2_10_fu_213_p1 = p_Val2_9_fu_199_p2[7:0];
assign p_Val2_12_fu_229_p2 = ($signed(lhs_V_1_fu_226_p1) + $signed(ap_const_lv9_1CE));
assign p_Val2_13_fu_243_p1 = p_Val2_12_fu_229_p2[7:0];
assign p_Val2_15_fu_273_p1 = p_Val2_s_fu_259_p2[7:0];
assign p_Val2_9_fu_199_p2 = ($signed(lhs_V_fu_196_p1) + $signed(ap_const_lv9_1CE));
assign p_Val2_s_fu_259_p2 = ($signed(lhs_V_2_fu_256_p1) + $signed(ap_const_lv9_1CE));
assign p_cast_fu_166_p1 = p_s_reg_143;
assign tmp_11_fu_235_p3 = p_Val2_12_fu_229_p2[ap_const_lv32_8];
assign tmp_13_fu_265_p3 = p_Val2_s_fu_259_p2[ap_const_lv32_8];
assign tmp_fu_205_p3 = p_Val2_9_fu_199_p2[ap_const_lv32_8];


endmodule //image_filter_arithm_pro_1

