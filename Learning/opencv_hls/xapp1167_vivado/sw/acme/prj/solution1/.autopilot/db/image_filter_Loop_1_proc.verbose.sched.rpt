

================================================================
== Vivado HLS Report for 'image_filter_Loop_1_proc'
================================================================
* Date:           Wed Mar 30 11:07:19 2016

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.67|      5.68|        0.83|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+---------+
    |    Latency    |    Interval   | Pipeline|
    | min |   max   | min |   max   |   Type  |
    +-----+---------+-----+---------+---------+
    |   29|  2089574|   29|  2089574|   none  |
    +-----+---------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+---------+-----------+-----------+-----------+----------+----------+
        |             |    Latency    | Iteration |  Initiation Interval  |   Trip   |          |
        |  Loop Name  | min |   max   |  Latency  |  achieved |   target  |   Count  | Pipelined|
        +-------------+-----+---------+-----------+-----------+-----------+----------+----------+
        |- Loop 1     |   28|  2089573| 14 ~ 1933 |          -|          -| 2 ~ 1081 |    no    |
        | + Loop 1.1  |   11|     1930|         11|          1|          1| 2 ~ 1921 |    yes   |
        +-------------+-----+---------+-----------+-----------+-----------+----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 1
  Pipeline-0: II = 1, D = 11, States = { 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	14  / (exitcond)
	8  / (!exitcond)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	3  / true
14 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.84ns
ST_1: B_2 [1/1] 0.00ns
newFuncRoot:0  %B_2 = alloca i8, align 1

ST_1: G_2 [1/1] 0.00ns
newFuncRoot:1  %G_2 = alloca i8, align 1

ST_1: y_window_0_1 [1/1] 0.00ns
newFuncRoot:2  %y_window_0_1 = alloca i8, align 1

ST_1: y_window_0_2 [1/1] 0.00ns
newFuncRoot:3  %y_window_0_2 = alloca i8, align 1

ST_1: R_2 [1/1] 0.00ns
newFuncRoot:4  %R_2 = alloca i8, align 1

ST_1: y_window_1_1 [1/1] 0.00ns
newFuncRoot:5  %y_window_1_1 = alloca i8, align 1

ST_1: y_window_1_2 [1/1] 0.00ns
newFuncRoot:6  %y_window_1_2 = alloca i8, align 1

ST_1: y_window_2_2 [1/1] 0.00ns
newFuncRoot:7  %y_window_2_2 = alloca i8, align 1

ST_1: y_window_2_1 [1/1] 0.00ns
newFuncRoot:8  %y_window_2_1 = alloca i8, align 1

ST_1: stg_24 [1/1] 0.00ns
newFuncRoot:9  call void (...)* @_ssdm_op_SpecIFCore(i32 %cols, [1 x i8]* @p_str1808, [10 x i8]* @p_str1809, [1 x i8]* @p_str1808, i32 -1, [1 x i8]* @p_str1808, [1 x i8]* @p_str1808, [24 x i8]* @p_str1810)

ST_1: stg_25 [1/1] 0.00ns
newFuncRoot:10  call void (...)* @_ssdm_op_SpecIFCore(i32 %rows, [1 x i8]* @p_str1808, [10 x i8]* @p_str1809, [1 x i8]* @p_str1808, i32 -1, [1 x i8]* @p_str1808, [1 x i8]* @p_str1808, [24 x i8]* @p_str1810)

ST_1: stg_26 [1/1] 0.00ns
newFuncRoot:11  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_2_V, [8 x i8]* @str77, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str78, [1 x i8]* @str78, [8 x i8]* @str77)

ST_1: stg_27 [1/1] 0.00ns
newFuncRoot:12  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_1_V, [8 x i8]* @str73, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str74, [1 x i8]* @str74, [8 x i8]* @str73)

ST_1: stg_28 [1/1] 0.00ns
newFuncRoot:13  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_0_V, [8 x i8]* @str69, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str70, [1 x i8]* @str70, [8 x i8]* @str69)

ST_1: stg_29 [1/1] 0.00ns
newFuncRoot:14  call void (...)* @_ssdm_op_SpecInterface(i8* %img_0_data_stream_2_V, [8 x i8]* @str65, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str66, [1 x i8]* @str66, [8 x i8]* @str65)

ST_1: stg_30 [1/1] 0.00ns
newFuncRoot:15  call void (...)* @_ssdm_op_SpecInterface(i8* %img_0_data_stream_1_V, [8 x i8]* @str61, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str62, [1 x i8]* @str62, [8 x i8]* @str61)

ST_1: stg_31 [1/1] 0.00ns
newFuncRoot:16  call void (...)* @_ssdm_op_SpecInterface(i8* %img_0_data_stream_0_V, [8 x i8]* @str57, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str58, [1 x i8]* @str58, [8 x i8]* @str57)

ST_1: cols_read [1/1] 0.00ns
newFuncRoot:17  %cols_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %cols)

ST_1: rows_read [1/1] 0.00ns
newFuncRoot:18  %rows_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %rows)

ST_1: line_buffer_0_0_val [1/1] 0.00ns
newFuncRoot:19  %line_buffer_0_0_val = alloca [1921 x i8], align 1

ST_1: line_buffer_0_1_val [1/1] 0.00ns
newFuncRoot:20  %line_buffer_0_1_val = alloca [1921 x i8], align 1

ST_1: line_buffer_0_2_val [1/1] 0.00ns
newFuncRoot:21  %line_buffer_0_2_val = alloca [1921 x i8], align 1

ST_1: line_buffer_1_0_val [1/1] 0.00ns
newFuncRoot:22  %line_buffer_1_0_val = alloca [1921 x i8], align 1

ST_1: line_buffer_1_1_val [1/1] 0.00ns
newFuncRoot:23  %line_buffer_1_1_val = alloca [1921 x i8], align 1

ST_1: line_buffer_1_2_val [1/1] 0.00ns
newFuncRoot:24  %line_buffer_1_2_val = alloca [1921 x i8], align 1

ST_1: tmp [1/1] 0.00ns
newFuncRoot:25  %tmp = trunc i32 %rows_read to i11

ST_1: tmp_7 [1/1] 1.84ns
newFuncRoot:26  %tmp_7 = add i11 %tmp, -1

ST_1: tmp_15_cast [1/1] 0.00ns
newFuncRoot:27  %tmp_15_cast = zext i11 %tmp_7 to i12

ST_1: tmp_2 [1/1] 0.00ns
newFuncRoot:28  %tmp_2 = trunc i32 %cols_read to i11

ST_1: tmp_8 [1/1] 1.84ns
newFuncRoot:29  %tmp_8 = add i11 %tmp_2, -1

ST_1: tmp_16_cast [1/1] 0.00ns
newFuncRoot:30  %tmp_16_cast = zext i11 %tmp_8 to i12

ST_1: tmp_9 [1/1] 1.84ns
newFuncRoot:31  %tmp_9 = add i11 %tmp_2, 1

ST_1: tmp_10 [1/1] 1.84ns
newFuncRoot:32  %tmp_10 = add i11 %tmp, 1

ST_1: tmp_21 [1/1] 0.00ns
newFuncRoot:33  %tmp_21 = trunc i32 %rows_read to i12

ST_1: tmp_24 [1/1] 0.00ns
newFuncRoot:34  %tmp_24 = trunc i32 %cols_read to i12

ST_1: stg_50 [1/1] 1.57ns
newFuncRoot:35  br label %.preheader


 <State 2>: 3.98ns
ST_2: row [1/1] 0.00ns
.preheader:0  %row = phi i11 [ 0, %newFuncRoot ], [ %row_1, %0 ]

ST_2: row_cast [1/1] 0.00ns
.preheader:1  %row_cast = zext i11 %row to i12

ST_2: stg_53 [1/1] 0.00ns
.preheader:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 1081, i64 0)

ST_2: exitcond1 [1/1] 2.11ns
.preheader:3  %exitcond1 = icmp eq i11 %row, %tmp_10

ST_2: row_1 [1/1] 1.84ns
.preheader:4  %row_1 = add i11 %row, 1

ST_2: stg_56 [1/1] 0.00ns
.preheader:5  br i1 %exitcond1, label %.exitStub, label %2

ST_2: tmp_5 [1/1] 0.00ns
:0  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1816)

ST_2: tmp_11 [1/1] 2.14ns
:1  %tmp_11 = icmp slt i12 %row_cast, %tmp_21

ST_2: output_row [1/1] 1.84ns
:2  %output_row = add i12 %row_cast, -1

ST_2: tmp_12 [1/1] 2.14ns
:3  %tmp_12 = icmp eq i12 %output_row, 0

ST_2: tmp_13 [1/1] 2.11ns
:4  %tmp_13 = icmp ne i11 %row, 0

ST_2: tmp_s [1/1] 2.14ns
:5  %tmp_s = icmp eq i12 %output_row, %tmp_15_cast

ST_2: stg_63 [1/1] 1.57ns
:6  br label %1

ST_2: stg_64 [1/1] 0.00ns
.exitStub:0  ret void


 <State 3>: 5.35ns
ST_3: col [1/1] 0.00ns
:0  %col = phi i11 [ 0, %2 ], [ %col_1, %._crit_edge5 ]

ST_3: exitcond [1/1] 2.11ns
:2  %exitcond = icmp eq i11 %col, %tmp_9

ST_3: col_1 [1/1] 1.84ns
:3  %col_1 = add i11 %col, 1

ST_3: stg_68 [1/1] 0.00ns
:4  br i1 %exitcond, label %0, label %3

ST_3: col_cast [1/1] 0.00ns
:0  %col_cast = zext i11 %col to i12

ST_3: stg_70 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 1921, i64 0)

ST_3: tmp_6 [1/1] 0.00ns
:2  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1817)

ST_3: stg_72 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1808) nounwind

ST_3: tmp_14 [1/1] 2.14ns
:4  %tmp_14 = icmp slt i12 %col_cast, %tmp_24

ST_3: or_cond [1/1] 1.37ns
:5  %or_cond = and i1 %tmp_11, %tmp_14

ST_3: stg_75 [1/1] 0.00ns
:6  br i1 %or_cond, label %"operator>>.exit", label %._crit_edge

ST_3: tmp_16 [1/1] 0.00ns
._crit_edge:3  %tmp_16 = zext i11 %col to i64

ST_3: line_buffer_1_0_val_addr [1/1] 0.00ns
._crit_edge:4  %line_buffer_1_0_val_addr = getelementptr [1921 x i8]* %line_buffer_1_0_val, i64 0, i64 %tmp_16

ST_3: line_buffer_1_1_val_addr [1/1] 0.00ns
._crit_edge:6  %line_buffer_1_1_val_addr = getelementptr [1921 x i8]* %line_buffer_1_1_val, i64 0, i64 %tmp_16

ST_3: line_buffer_1_2_val_addr [1/1] 0.00ns
._crit_edge:8  %line_buffer_1_2_val_addr = getelementptr [1921 x i8]* %line_buffer_1_2_val, i64 0, i64 %tmp_16

ST_3: B [2/2] 2.39ns
._crit_edge:9  %B = load i8* %line_buffer_1_2_val_addr, align 1

ST_3: line_buffer_0_0_val_addr [1/1] 0.00ns
._crit_edge:29  %line_buffer_0_0_val_addr = getelementptr [1921 x i8]* %line_buffer_0_0_val, i64 0, i64 %tmp_16

ST_3: line_buffer_0_1_val_addr [1/1] 0.00ns
._crit_edge:32  %line_buffer_0_1_val_addr = getelementptr [1921 x i8]* %line_buffer_0_1_val, i64 0, i64 %tmp_16

ST_3: line_buffer_0_2_val_addr [1/1] 0.00ns
._crit_edge:35  %line_buffer_0_2_val_addr = getelementptr [1921 x i8]* %line_buffer_0_2_val, i64 0, i64 %tmp_16

ST_3: pix_val_2 [2/2] 2.39ns
._crit_edge:36  %pix_val_2 = load i8* %line_buffer_0_2_val_addr, align 1

ST_3: output_col [1/1] 1.84ns
._crit_edge:79  %output_col = add i12 %col_cast, -1

ST_3: tmp_17 [1/1] 2.14ns
._crit_edge:80  %tmp_17 = icmp eq i12 %output_col, 0

ST_3: tmp_18 [1/1] 2.14ns
._crit_edge:81  %tmp_18 = icmp eq i12 %output_col, %tmp_16_cast

ST_3: tmp10 [1/1] 1.37ns
._crit_edge:82  %tmp10 = or i1 %tmp_12, %tmp_17

ST_3: tmp11 [1/1] 1.37ns
._crit_edge:83  %tmp11 = or i1 %tmp_s, %tmp_18

ST_3: tmp_19 [1/1] 2.11ns
._crit_edge4240:22  %tmp_19 = icmp ne i11 %col, 0

ST_3: or_cond2 [1/1] 1.37ns
._crit_edge4240:23  %or_cond2 = and i1 %tmp_13, %tmp_19

ST_3: stg_92 [1/1] 0.00ns
._crit_edge4240:24  br i1 %or_cond2, label %"operator<<.exit", label %._crit_edge5


 <State 4>: 4.78ns
ST_4: tmp_15 [1/1] 0.00ns
operator>>.exit:0  %tmp_15 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1828)

ST_4: stg_94 [1/1] 0.00ns
operator>>.exit:1  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1808) nounwind

ST_4: scl_val_0 [1/1] 1.70ns
operator>>.exit:2  %scl_val_0 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_0_data_stream_0_V)

ST_4: scl_val_1 [1/1] 1.70ns
operator>>.exit:3  %scl_val_1 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_0_data_stream_1_V)

ST_4: p_val_2 [1/1] 1.70ns
operator>>.exit:4  %p_val_2 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_0_data_stream_2_V)

ST_4: empty_28 [1/1] 0.00ns
operator>>.exit:5  %empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1828, i32 %tmp_15)

ST_4: stg_99 [1/1] 0.00ns
operator>>.exit:6  store i8 %scl_val_0, i8* %R_2, align 1

ST_4: stg_100 [1/1] 0.00ns
operator>>.exit:7  store i8 %scl_val_1, i8* %G_2, align 1

ST_4: stg_101 [1/1] 0.00ns
operator>>.exit:8  store i8 %p_val_2, i8* %B_2, align 1

ST_4: stg_102 [1/1] 0.00ns
operator>>.exit:9  br label %._crit_edge

ST_4: R [2/2] 2.39ns
._crit_edge:5  %R = load i8* %line_buffer_1_0_val_addr, align 1

ST_4: G [2/2] 2.39ns
._crit_edge:7  %G = load i8* %line_buffer_1_1_val_addr, align 1

ST_4: B [1/2] 2.39ns
._crit_edge:9  %B = load i8* %line_buffer_1_2_val_addr, align 1

ST_4: tmp_4_cast_i [1/1] 0.00ns
._crit_edge:17  %tmp_4_cast_i = zext i8 %B to i13

ST_4: tmp_5_i [3/3] 1.05ns
._crit_edge:18  %tmp_5_i = mul i13 %tmp_4_cast_i, 25

ST_4: pix_val_0 [2/2] 2.39ns
._crit_edge:30  %pix_val_0 = load i8* %line_buffer_0_0_val_addr, align 1

ST_4: pix_val_1 [2/2] 2.39ns
._crit_edge:33  %pix_val_1 = load i8* %line_buffer_0_1_val_addr, align 1

ST_4: pix_val_2 [1/2] 2.39ns
._crit_edge:36  %pix_val_2 = load i8* %line_buffer_0_2_val_addr, align 1

ST_4: stg_111 [1/1] 2.39ns
._crit_edge:37  store i8 %pix_val_2, i8* %line_buffer_1_2_val_addr, align 1

ST_4: or_cond3 [1/1] 1.37ns
._crit_edge:84  %or_cond3 = or i1 %tmp11, %tmp10

ST_4: stg_113 [1/1] 1.57ns
._crit_edge:85  br i1 %or_cond3, label %._crit_edge4240, label %4


 <State 5>: 4.78ns
ST_5: B_4 [1/1] 0.00ns
._crit_edge:0  %B_4 = load i8* %B_2, align 1

ST_5: G_5 [1/1] 0.00ns
._crit_edge:1  %G_5 = load i8* %G_2, align 1

ST_5: R_5 [1/1] 0.00ns
._crit_edge:2  %R_5 = load i8* %R_2, align 1

ST_5: R [1/2] 2.39ns
._crit_edge:5  %R = load i8* %line_buffer_1_0_val_addr, align 1

ST_5: G [1/2] 2.39ns
._crit_edge:7  %G = load i8* %line_buffer_1_1_val_addr, align 1

ST_5: p_shl2_i [1/1] 0.00ns
._crit_edge:12  %p_shl2_i = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %R, i1 false)

ST_5: p_shl2_cast_i_cast [1/1] 0.00ns
._crit_edge:13  %p_shl2_cast_i_cast = zext i9 %p_shl2_i to i10

ST_5: tmp_5_i [2/3] 1.05ns
._crit_edge:18  %tmp_5_i = mul i13 %tmp_4_cast_i, 25

ST_5: tmp1 [1/1] 1.84ns
._crit_edge:19  %tmp1 = add i10 %p_shl2_cast_i_cast, 128

ST_5: pix_val_0 [1/2] 2.39ns
._crit_edge:30  %pix_val_0 = load i8* %line_buffer_0_0_val_addr, align 1

ST_5: stg_124 [1/1] 2.39ns
._crit_edge:31  store i8 %pix_val_0, i8* %line_buffer_1_0_val_addr, align 1

ST_5: pix_val_1 [1/2] 2.39ns
._crit_edge:33  %pix_val_1 = load i8* %line_buffer_0_1_val_addr, align 1

ST_5: stg_126 [1/1] 2.39ns
._crit_edge:34  store i8 %pix_val_1, i8* %line_buffer_1_1_val_addr, align 1

ST_5: tmp_4_cast_i1 [1/1] 0.00ns
._crit_edge:45  %tmp_4_cast_i1 = zext i8 %pix_val_2 to i13

ST_5: tmp_5_i1 [3/3] 1.05ns
._crit_edge:46  %tmp_5_i1 = mul i13 %tmp_4_cast_i1, 25

ST_5: stg_129 [1/1] 2.39ns
._crit_edge:57  store i8 %R_5, i8* %line_buffer_0_0_val_addr, align 1

ST_5: stg_130 [1/1] 2.39ns
._crit_edge:58  store i8 %G_5, i8* %line_buffer_0_1_val_addr, align 1

ST_5: stg_131 [1/1] 2.39ns
._crit_edge:59  store i8 %B_4, i8* %line_buffer_0_2_val_addr, align 1

ST_5: tmp_4_cast_i2 [1/1] 0.00ns
._crit_edge:67  %tmp_4_cast_i2 = zext i8 %B_4 to i13

ST_5: tmp_5_i2 [3/3] 1.05ns
._crit_edge:68  %tmp_5_i2 = mul i13 %tmp_4_cast_i2, 25


 <State 6>: 5.42ns
ST_6: p_shl1_i [1/1] 0.00ns
._crit_edge:10  %p_shl1_i = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %R, i6 0)

ST_6: p_shl1_cast_i [1/1] 0.00ns
._crit_edge:11  %p_shl1_cast_i = zext i14 %p_shl1_i to i15

ST_6: tmp_2_cast3_i_cast [1/1] 0.00ns
._crit_edge:14  %tmp_2_cast3_i_cast = zext i8 %G to i13

ST_6: p_shl_i [1/1] 0.00ns
._crit_edge:15  %p_shl_i = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %G, i7 0)

ST_6: p_shl_cast_i [1/1] 0.00ns
._crit_edge:16  %p_shl_cast_i = zext i15 %p_shl_i to i16

ST_6: tmp_5_i [1/3] 0.00ns
._crit_edge:18  %tmp_5_i = mul i13 %tmp_4_cast_i, 25

ST_6: tmp55_cast [1/1] 0.00ns
._crit_edge:20  %tmp55_cast = zext i10 %tmp1 to i15

ST_6: tmp_6_i [1/1] 1.96ns
._crit_edge:21  %tmp_6_i = add i15 %tmp55_cast, %p_shl1_cast_i

ST_6: tmp_6_cast_i [1/1] 0.00ns
._crit_edge:22  %tmp_6_cast_i = zext i15 %tmp_6_i to i16

ST_6: tmp2 [1/1] 1.73ns
._crit_edge:23  %tmp2 = add i16 %p_shl_cast_i, %tmp_6_cast_i

ST_6: tmp3 [1/1] 3.02ns
._crit_edge:24  %tmp3 = add i13 %tmp_5_i, %tmp_2_cast3_i_cast

ST_6: tmp57_cast [1/1] 0.00ns
._crit_edge:25  %tmp57_cast = zext i13 %tmp3 to i16

ST_6: tmp_8_i [1/1] 1.73ns
._crit_edge:26  %tmp_8_i = add i16 %tmp57_cast, %tmp2

ST_6: tmp_i [1/1] 0.00ns
._crit_edge:27  %tmp_i = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_8_i, i32 8, i32 15)

ST_6: p_shl2_i6 [1/1] 0.00ns
._crit_edge:40  %p_shl2_i6 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %pix_val_0, i1 false)

ST_6: p_shl2_cast_i7_cast [1/1] 0.00ns
._crit_edge:41  %p_shl2_cast_i7_cast = zext i9 %p_shl2_i6 to i10

ST_6: tmp_5_i1 [2/3] 1.05ns
._crit_edge:46  %tmp_5_i1 = mul i13 %tmp_4_cast_i1, 25

ST_6: tmp4 [1/1] 1.84ns
._crit_edge:47  %tmp4 = add i10 %p_shl2_cast_i7_cast, 128

ST_6: p_shl1_i1 [1/1] 0.00ns
._crit_edge:60  %p_shl1_i1 = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %R_5, i6 0)

ST_6: p_shl1_cast_i1 [1/1] 0.00ns
._crit_edge:61  %p_shl1_cast_i1 = zext i14 %p_shl1_i1 to i15

ST_6: p_shl2_i1 [1/1] 0.00ns
._crit_edge:62  %p_shl2_i1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %R_5, i1 false)

ST_6: p_shl2_cast_i29_cast [1/1] 0.00ns
._crit_edge:63  %p_shl2_cast_i29_cast = zext i9 %p_shl2_i1 to i10

ST_6: tmp_5_i2 [2/3] 1.05ns
._crit_edge:68  %tmp_5_i2 = mul i13 %tmp_4_cast_i2, 25

ST_6: tmp7 [1/1] 1.84ns
._crit_edge:69  %tmp7 = add i10 %p_shl2_cast_i29_cast, 128

ST_6: tmp61_cast [1/1] 0.00ns
._crit_edge:70  %tmp61_cast = zext i10 %tmp7 to i15

ST_6: tmp_6_i2 [1/1] 1.96ns
._crit_edge:71  %tmp_6_i2 = add i15 %tmp61_cast, %p_shl1_cast_i1


 <State 7>: 5.42ns
ST_7: y_window_2_2_1 [1/1] 0.00ns
:1  %y_window_2_2_1 = load i8* %y_window_2_1, align 1

ST_7: y_window_2_1_2 [1/1] 1.72ns
._crit_edge:28  %y_window_2_1_2 = add i8 %tmp_i, 16

ST_7: p_shl1_i4 [1/1] 0.00ns
._crit_edge:38  %p_shl1_i4 = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %pix_val_0, i6 0)

ST_7: p_shl1_cast_i5 [1/1] 0.00ns
._crit_edge:39  %p_shl1_cast_i5 = zext i14 %p_shl1_i4 to i15

ST_7: tmp_2_cast3_i9_cast [1/1] 0.00ns
._crit_edge:42  %tmp_2_cast3_i9_cast = zext i8 %pix_val_1 to i13

ST_7: p_shl_i1 [1/1] 0.00ns
._crit_edge:43  %p_shl_i1 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %pix_val_1, i7 0)

ST_7: p_shl_cast_i1 [1/1] 0.00ns
._crit_edge:44  %p_shl_cast_i1 = zext i15 %p_shl_i1 to i16

ST_7: tmp_5_i1 [1/3] 0.00ns
._crit_edge:46  %tmp_5_i1 = mul i13 %tmp_4_cast_i1, 25

ST_7: tmp58_cast [1/1] 0.00ns
._crit_edge:48  %tmp58_cast = zext i10 %tmp4 to i15

ST_7: tmp_6_i1 [1/1] 1.96ns
._crit_edge:49  %tmp_6_i1 = add i15 %tmp58_cast, %p_shl1_cast_i5

ST_7: tmp_6_cast_i1 [1/1] 0.00ns
._crit_edge:50  %tmp_6_cast_i1 = zext i15 %tmp_6_i1 to i16

ST_7: tmp5 [1/1] 1.73ns
._crit_edge:51  %tmp5 = add i16 %p_shl_cast_i1, %tmp_6_cast_i1

ST_7: tmp6 [1/1] 3.02ns
._crit_edge:52  %tmp6 = add i13 %tmp_5_i1, %tmp_2_cast3_i9_cast

ST_7: tmp60_cast [1/1] 0.00ns
._crit_edge:53  %tmp60_cast = zext i13 %tmp6 to i16

ST_7: tmp_8_i1 [1/1] 1.73ns
._crit_edge:54  %tmp_8_i1 = add i16 %tmp60_cast, %tmp5

ST_7: tmp_i1 [1/1] 0.00ns
._crit_edge:55  %tmp_i1 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_8_i1, i32 8, i32 15)

ST_7: tmp_2_cast3_i31_cast [1/1] 0.00ns
._crit_edge:64  %tmp_2_cast3_i31_cast = zext i8 %G_5 to i13

ST_7: p_shl_i2 [1/1] 0.00ns
._crit_edge:65  %p_shl_i2 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %G_5, i7 0)

ST_7: p_shl_cast_i2 [1/1] 0.00ns
._crit_edge:66  %p_shl_cast_i2 = zext i15 %p_shl_i2 to i16

ST_7: tmp_5_i2 [1/3] 0.00ns
._crit_edge:68  %tmp_5_i2 = mul i13 %tmp_4_cast_i2, 25

ST_7: tmp_6_cast_i2 [1/1] 0.00ns
._crit_edge:72  %tmp_6_cast_i2 = zext i15 %tmp_6_i2 to i16

ST_7: tmp8 [1/1] 1.73ns
._crit_edge:73  %tmp8 = add i16 %p_shl_cast_i2, %tmp_6_cast_i2

ST_7: tmp9 [1/1] 3.02ns
._crit_edge:74  %tmp9 = add i13 %tmp_5_i2, %tmp_2_cast3_i31_cast

ST_7: tmp63_cast [1/1] 0.00ns
._crit_edge:75  %tmp63_cast = zext i13 %tmp9 to i16

ST_7: tmp_8_i2 [1/1] 1.73ns
._crit_edge:76  %tmp_8_i2 = add i16 %tmp63_cast, %tmp8

ST_7: tmp_i2 [1/1] 0.00ns
._crit_edge:77  %tmp_i2 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_8_i2, i32 8, i32 15)

ST_7: tmp_cast_i2 [1/1] 0.00ns
._crit_edge4240:1  %tmp_cast_i2 = zext i8 %pix_val_2 to i9

ST_7: tmp_cast_i [1/1] 0.00ns
._crit_edge4240:2  %tmp_cast_i = zext i8 %pix_val_1 to i9

ST_7: tmp_2_i3 [1/1] 1.72ns
._crit_edge4240:4  %tmp_2_i3 = add i9 %tmp_cast_i, %tmp_cast_i2

ST_7: stg_189 [1/1] 0.00ns
._crit_edge5:3  store i8 %y_window_2_1_2, i8* %y_window_2_1, align 1


 <State 8>: 5.28ns
ST_8: y_window_1_1_1 [1/1] 1.72ns
._crit_edge:56  %y_window_1_1_1 = add i8 %tmp_i1, 16

ST_8: y_window_0_1_1 [1/1] 1.72ns
._crit_edge:78  %y_window_0_1_1 = add i8 %tmp_i2, 16

ST_8: y_window_0_1_load [1/1] 0.00ns
:0  %y_window_0_1_load = load i8* %y_window_0_1, align 1

ST_8: y_window_0_2_load [1/1] 0.00ns
:1  %y_window_0_2_load = load i8* %y_window_0_2, align 1

ST_8: tmp_19_0_cast9_i_cast [1/1] 0.00ns
:4  %tmp_19_0_cast9_i_cast = zext i8 %y_window_0_1_1 to i9

ST_8: tmp_23_0_1_i [1/1] 0.00ns
:5  %tmp_23_0_1_i = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %y_window_0_1_load, i1 false)

ST_8: tmp_23_0_1_cast_i [1/1] 0.00ns
:6  %tmp_23_0_1_cast_i = zext i9 %tmp_23_0_1_i to i10

ST_8: tmp_19_0_2_cast8_i_cast [1/1] 0.00ns
:7  %tmp_19_0_2_cast8_i_cast = zext i8 %y_window_0_2_load to i9

ST_8: x_weight_2_0_2_i [1/1] 1.72ns
:8  %x_weight_2_0_2_i = sub i9 %tmp_19_0_2_cast8_i_cast, %tmp_19_0_cast9_i_cast

ST_8: tmp12 [1/1] 1.72ns
:16  %tmp12 = add i9 %tmp_19_0_cast9_i_cast, %tmp_19_0_2_cast8_i_cast

ST_8: tmp66_cast [1/1] 0.00ns
:17  %tmp66_cast = zext i9 %tmp12 to i10

ST_8: y_weight_2_1_2_i [1/1] 1.84ns
:18  %y_weight_2_1_2_i = add i10 %tmp66_cast, %tmp_23_0_1_cast_i

ST_8: y_window_0_2_1 [1/1] 0.00ns
._crit_edge5:0  %y_window_0_2_1 = load i8* %y_window_0_1, align 1

ST_8: stg_203 [1/1] 0.00ns
._crit_edge5:7  store i8 %y_window_0_2_1, i8* %y_window_0_2, align 1

ST_8: stg_204 [1/1] 0.00ns
._crit_edge5:8  store i8 %y_window_0_1_1, i8* %y_window_0_1, align 1


 <State 9>: 5.52ns
ST_9: y_window_1_2_load [1/1] 0.00ns
:2  %y_window_1_2_load = load i8* %y_window_1_2, align 1

ST_9: y_window_2_2_load [1/1] 0.00ns
:3  %y_window_2_2_load = load i8* %y_window_2_2, align 1

ST_9: x_weight_2_0_2_cast_i [1/1] 0.00ns
:9  %x_weight_2_0_2_cast_i = sext i9 %x_weight_2_0_2_i to i11

ST_9: p_shl8_i [1/1] 0.00ns
:10  %p_shl8_i = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %y_window_1_1_1, i1 false)

ST_9: p_shl8_cast_i [1/1] 0.00ns
:11  %p_shl8_cast_i = zext i9 %p_shl8_i to i11

ST_9: x_weight_2_1_1_i [1/1] 1.37ns
:12  %x_weight_2_1_1_i = sub i11 %x_weight_2_0_2_cast_i, %p_shl8_cast_i

ST_9: tmp_21_1_2_i [1/1] 0.00ns
:13  %tmp_21_1_2_i = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %y_window_1_2_load, i1 false)

ST_9: tmp_21_1_2_cast_i [1/1] 0.00ns
:14  %tmp_21_1_2_cast_i = zext i9 %tmp_21_1_2_i to i11

ST_9: x_weight_2_1_2_i [1/1] 1.37ns
:15  %x_weight_2_1_2_i = add i11 %x_weight_2_1_1_i, %tmp_21_1_2_cast_i

ST_9: y_weight_2_1_2_cast_i [1/1] 0.00ns
:19  %y_weight_2_1_2_cast_i = zext i10 %y_weight_2_1_2_i to i11

ST_9: tmp_19_2_cast_i [1/1] 0.00ns
:20  %tmp_19_2_cast_i = zext i8 %y_window_2_1_2 to i11

ST_9: x_weight_2_2_i [1/1] 1.37ns
:21  %x_weight_2_2_i = sub i11 %x_weight_2_1_2_i, %tmp_19_2_cast_i

ST_9: y_weight_2_2_i [1/1] 1.84ns
:22  %y_weight_2_2_i = sub i11 %y_weight_2_1_2_cast_i, %tmp_19_2_cast_i

ST_9: p_shl_i3 [1/1] 0.00ns
:23  %p_shl_i3 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %y_window_2_2_1, i1 false)

ST_9: p_shl_cast_i3 [1/1] 0.00ns
:24  %p_shl_cast_i3 = zext i9 %p_shl_i3 to i11

ST_9: y_weight_2_2_1_i [1/1] 1.84ns
:25  %y_weight_2_2_1_i = sub i11 %y_weight_2_2_i, %p_shl_cast_i3

ST_9: tmp_19_2_2_cast_i [1/1] 0.00ns
:26  %tmp_19_2_2_cast_i = zext i8 %y_window_2_2_load to i11

ST_9: x_weight_2_2_2_i [1/1] 1.37ns
:27  %x_weight_2_2_2_i = add i11 %x_weight_2_2_i, %tmp_19_2_2_cast_i

ST_9: y_weight_2_2_2_i [1/1] 1.84ns
:28  %y_weight_2_2_2_i = sub i11 %y_weight_2_2_1_i, %tmp_19_2_2_cast_i

ST_9: tmp_28 [1/1] 0.00ns
:30  %tmp_28 = trunc i11 %x_weight_2_2_2_i to i8

ST_9: tmp_29 [1/1] 0.00ns
:34  %tmp_29 = trunc i11 %y_weight_2_2_2_i to i8

ST_9: y_window_1_2_1 [1/1] 0.00ns
._crit_edge5:1  %y_window_1_2_1 = load i8* %y_window_1_1, align 1

ST_9: empty_27 [1/1] 0.00ns
._crit_edge5:2  %empty_27 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1817, i32 %tmp_6)

ST_9: stg_228 [1/1] 0.00ns
._crit_edge5:4  store i8 %y_window_2_2_1, i8* %y_window_2_2, align 1

ST_9: stg_229 [1/1] 0.00ns
._crit_edge5:5  store i8 %y_window_1_2_1, i8* %y_window_1_2, align 1

ST_9: stg_230 [1/1] 0.00ns
._crit_edge5:6  store i8 %y_window_1_1_1, i8* %y_window_1_1, align 1

ST_9: stg_231 [1/1] 0.00ns
._crit_edge5:9  br label %1


 <State 10>: 5.20ns
ST_10: tmp_i_29 [1/1] 2.11ns
:29  %tmp_i_29 = icmp sgt i11 %x_weight_2_2_2_i, 0

ST_10: tmp_22 [1/1] 1.72ns
:31  %tmp_22 = sub i8 0, %tmp_28

ST_10: tmp_23 [1/1] 1.37ns
:32  %tmp_23 = select i1 %tmp_i_29, i8 %tmp_28, i8 %tmp_22

ST_10: tmp_11_i [1/1] 2.11ns
:33  %tmp_11_i = icmp sgt i11 %y_weight_2_2_2_i, 0

ST_10: tmp_25 [1/1] 1.72ns
:35  %tmp_25 = sub i8 0, %tmp_29

ST_10: tmp_26 [1/1] 1.37ns
:36  %tmp_26 = select i1 %tmp_11_i, i8 %tmp_29, i8 %tmp_25

ST_10: edge_weight_i [1/1] 1.72ns
:37  %edge_weight_i = add i8 %tmp_26, %tmp_23

ST_10: tmp_1_cast_i [1/1] 0.00ns
._crit_edge4240:3  %tmp_1_cast_i = zext i8 %pix_val_0 to i10

ST_10: tmp_2_cast_i3 [1/1] 0.00ns
._crit_edge4240:5  %tmp_2_cast_i3 = zext i9 %tmp_2_i3 to i10

ST_10: tmp_3_i [1/1] 0.00ns
._crit_edge4240:6  %tmp_3_i = add i10 %tmp_2_cast_i3, %tmp_1_cast_i

ST_10: zext_cast [1/1] 0.00ns
._crit_edge4240:7  %zext_cast = zext i10 %tmp_3_i to i22

ST_10: mul [2/2] 4.19ns
._crit_edge4240:8  %mul = mul i22 %zext_cast, 1366


 <State 11>: 2.00ns
ST_11: tmp_15_i [1/1] 2.00ns
:39  %tmp_15_i = icmp ult i8 %edge_weight_i, 55

ST_11: tmp_17_i [1/1] 2.00ns
:40  %tmp_17_i = icmp ugt i8 %edge_weight_i, -51

ST_11: mul [1/2] 0.00ns
._crit_edge4240:8  %mul = mul i22 %zext_cast, 1366

ST_11: B_cast_i [1/1] 0.00ns
._crit_edge4240:9  %B_cast_i = call i9 @_ssdm_op_PartSelect.i9.i22.i32.i32(i22 %mul, i32 12, i32 20)

ST_11: sepia_val_0 [1/1] 0.00ns
._crit_edge4240:12  %sepia_val_0 = call i8 @_ssdm_op_PartSelect.i8.i22.i32.i32(i22 %mul, i32 12, i32 19)


 <State 12>: 5.68ns
ST_12: edge_val [1/1] 1.37ns
:38  %edge_val = xor i8 %edge_weight_i, -1

ST_12: not_tmp_15_i [1/1] 1.37ns
:41  %not_tmp_15_i = xor i1 %tmp_15_i, true

ST_12: p_i_cast [1/1] 1.37ns
:42  %p_i_cast = select i1 %not_tmp_15_i, i8 -1, i8 0

ST_12: tmp_27 [1/1] 1.37ns
:43  %tmp_27 = or i1 %tmp_15_i, %tmp_17_i

ST_12: edge_val_1 [1/1] 1.37ns
:44  %edge_val_1 = select i1 %tmp_27, i8 %p_i_cast, i8 %edge_val

ST_12: stg_254 [1/1] 1.57ns
:45  br label %._crit_edge4240

ST_12: R_3 [1/1] 1.84ns
._crit_edge4240:10  %R_3 = add i9 %B_cast_i, 60

ST_12: G_3 [1/1] 1.84ns
._crit_edge4240:11  %G_3 = add i9 %B_cast_i, 34

ST_12: tmp_30 [1/1] 0.00ns
._crit_edge4240:13  %tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %R_3, i32 8)

ST_12: tmp_31 [1/1] 0.00ns
._crit_edge4240:14  %tmp_31 = trunc i9 %R_3 to i8

ST_12: sepia_val_2 [1/1] 1.37ns
._crit_edge4240:15  %sepia_val_2 = select i1 %tmp_30, i8 -1, i8 %tmp_31

ST_12: tmp_32 [1/1] 0.00ns
._crit_edge4240:16  %tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %G_3, i32 8)

ST_12: tmp_33 [1/1] 0.00ns
._crit_edge4240:17  %tmp_33 = trunc i9 %G_3 to i8

ST_12: sepia_val_1 [1/1] 1.37ns
._crit_edge4240:18  %sepia_val_1 = select i1 %tmp_32, i8 -1, i8 %tmp_33


 <State 13>: 3.42ns
ST_13: edge_val1 [1/1] 0.00ns
._crit_edge4240:0  %edge_val1 = phi i8 [ %edge_val_1, %4 ], [ 0, %._crit_edge ]

ST_13: tmp_1 [1/1] 1.72ns
._crit_edge4240:19  %tmp_1 = add i8 %sepia_val_0, %edge_val1

ST_13: tmp_3 [1/1] 1.72ns
._crit_edge4240:20  %tmp_3 = add i8 %sepia_val_1, %edge_val1

ST_13: tmp_4 [1/1] 1.72ns
._crit_edge4240:21  %tmp_4 = add i8 %sepia_val_2, %edge_val1

ST_13: tmp_20 [1/1] 0.00ns
operator<<.exit:0  %tmp_20 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1826)

ST_13: stg_268 [1/1] 0.00ns
operator<<.exit:1  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1808) nounwind

ST_13: stg_269 [1/1] 1.70ns
operator<<.exit:2  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %img_1_data_stream_0_V, i8 %tmp_1)

ST_13: stg_270 [1/1] 1.70ns
operator<<.exit:3  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %img_1_data_stream_1_V, i8 %tmp_3)

ST_13: stg_271 [1/1] 1.70ns
operator<<.exit:4  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %img_1_data_stream_2_V, i8 %tmp_4)

ST_13: empty_30 [1/1] 0.00ns
operator<<.exit:5  %empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1826, i32 %tmp_20)

ST_13: stg_273 [1/1] 0.00ns
operator<<.exit:6  br label %._crit_edge5


 <State 14>: 0.00ns
ST_14: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1816, i32 %tmp_5)

ST_14: stg_275 [1/1] 0.00ns
:1  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
