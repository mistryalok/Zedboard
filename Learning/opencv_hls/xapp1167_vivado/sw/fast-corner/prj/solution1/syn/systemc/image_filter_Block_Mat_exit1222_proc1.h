// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _image_filter_Block_Mat_exit1222_proc1_HH_
#define _image_filter_Block_Mat_exit1222_proc1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "image_filter_CvtColor.h"

namespace ap_rtl {

struct image_filter_Block_Mat_exit1222_proc1 : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > p_read;
    sc_in< sc_lv<12> > p_read2;
    sc_in< sc_lv<12> > p_read6;
    sc_in< sc_lv<12> > p_read7;
    sc_in< sc_lv<8> > src0_data_stream_0_V_dout;
    sc_in< sc_logic > src0_data_stream_0_V_empty_n;
    sc_out< sc_logic > src0_data_stream_0_V_read;
    sc_in< sc_lv<8> > src0_data_stream_1_V_dout;
    sc_in< sc_logic > src0_data_stream_1_V_empty_n;
    sc_out< sc_logic > src0_data_stream_1_V_read;
    sc_in< sc_lv<8> > src0_data_stream_2_V_dout;
    sc_in< sc_logic > src0_data_stream_2_V_empty_n;
    sc_out< sc_logic > src0_data_stream_2_V_read;
    sc_out< sc_lv<8> > gray_data_stream_0_V_din;
    sc_in< sc_logic > gray_data_stream_0_V_full_n;
    sc_out< sc_logic > gray_data_stream_0_V_write;
    sc_out< sc_lv<12> > ap_return_0;
    sc_out< sc_lv<12> > ap_return_1;


    // Module declarations
    image_filter_Block_Mat_exit1222_proc1(sc_module_name name);
    SC_HAS_PROCESS(image_filter_Block_Mat_exit1222_proc1);

    ~image_filter_Block_Mat_exit1222_proc1();

    sc_trace_file* mVcdFile;

    image_filter_CvtColor* grp_image_filter_CvtColor_fu_67;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< bool > ap_sig_bdd_56;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_ap_start;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_ap_done;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_ap_idle;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_ap_ready;
    sc_signal< sc_lv<12> > grp_image_filter_CvtColor_fu_67_p_src_rows_V_read;
    sc_signal< sc_lv<12> > grp_image_filter_CvtColor_fu_67_p_src_cols_V_read;
    sc_signal< sc_lv<8> > grp_image_filter_CvtColor_fu_67_p_src_data_stream_0_V_dout;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_src_data_stream_0_V_empty_n;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_src_data_stream_0_V_read;
    sc_signal< sc_lv<8> > grp_image_filter_CvtColor_fu_67_p_src_data_stream_1_V_dout;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_src_data_stream_1_V_empty_n;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_src_data_stream_1_V_read;
    sc_signal< sc_lv<8> > grp_image_filter_CvtColor_fu_67_p_src_data_stream_2_V_dout;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_src_data_stream_2_V_empty_n;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > grp_image_filter_CvtColor_fu_67_p_dst_data_stream_V_din;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_dst_data_stream_V_full_n;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_p_dst_data_stream_V_write;
    sc_signal< sc_logic > grp_image_filter_CvtColor_fu_67_ap_start_ap_start_reg;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_88;
    sc_signal< sc_lv<12> > ap_return_0_preg;
    sc_signal< sc_lv<12> > ap_return_1_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<12> ap_const_lv12_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_56();
    void thread_ap_sig_bdd_88();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_gray_data_stream_0_V_din();
    void thread_gray_data_stream_0_V_write();
    void thread_grp_image_filter_CvtColor_fu_67_ap_start();
    void thread_grp_image_filter_CvtColor_fu_67_p_dst_data_stream_V_full_n();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_cols_V_read();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_data_stream_0_V_dout();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_data_stream_0_V_empty_n();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_data_stream_1_V_dout();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_data_stream_1_V_empty_n();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_data_stream_2_V_dout();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_data_stream_2_V_empty_n();
    void thread_grp_image_filter_CvtColor_fu_67_p_src_rows_V_read();
    void thread_src0_data_stream_0_V_read();
    void thread_src0_data_stream_1_V_read();
    void thread_src0_data_stream_2_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
