// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _axi_stream_counter_HH_
#define _axi_stream_counter_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct axi_stream_counter : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > counter_TDATA;
    sc_out< sc_logic > counter_TVALID;
    sc_in< sc_logic > counter_TREADY;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    axi_stream_counter(sc_module_name name);
    SC_HAS_PROCESS(axi_stream_counter);

    ~axi_stream_counter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_19;
    sc_signal< sc_lv<32> > counterValue;
    sc_signal< sc_lv<32> > counterValue_assign_fu_34_p2;
    sc_signal< sc_logic > ap_sig_ioackin_counter_TREADY;
    sc_signal< sc_logic > ap_reg_ioackin_counter_TREADY;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_60;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_19();
    void thread_ap_sig_bdd_60();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_ioackin_counter_TREADY();
    void thread_counterValue_assign_fu_34_p2();
    void thread_counter_TDATA();
    void thread_counter_TVALID();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
