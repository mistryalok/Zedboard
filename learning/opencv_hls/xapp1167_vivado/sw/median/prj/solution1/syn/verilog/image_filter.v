// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_filter,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.758000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=586,HLS_SYN_LUT=990}" *)

module image_filter (
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        rows,
        cols,
        ap_clk,
        ap_rst_n,
        ap_start,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        ap_done,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_1 = 8'b1;

input  [31:0] INPUT_STREAM_TDATA;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output   ap_done;
output   ap_idle;
output   ap_ready;

reg ap_idle;
reg    ap_rst_n_inv;
wire    image_filter_Block_proc_U0_ap_start;
wire    image_filter_Block_proc_U0_ap_done;
reg    image_filter_Block_proc_U0_ap_continue;
wire    image_filter_Block_proc_U0_ap_idle;
wire    image_filter_Block_proc_U0_ap_ready;
wire   [31:0] image_filter_Block_proc_U0_rows;
wire   [31:0] image_filter_Block_proc_U0_cols;
wire   [11:0] image_filter_Block_proc_U0_ap_return_0;
wire   [11:0] image_filter_Block_proc_U0_ap_return_1;
wire   [11:0] image_filter_Block_proc_U0_ap_return_2;
wire   [11:0] image_filter_Block_proc_U0_ap_return_3;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V;
wire    img_1_rows_V_full_n;
reg    ap_reg_ready_img_1_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_1_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel;
wire    img_0_rows_V_channel_full_n;
reg    ap_reg_ready_img_0_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V;
wire    img_1_cols_V_full_n;
reg    ap_reg_ready_img_1_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_1_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel;
wire    img_0_cols_V_channel_full_n;
reg    ap_reg_ready_img_0_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_cols_V_channel_full_n;
wire    image_filter_AXIvideo2Mat_U0_ap_start;
wire    image_filter_AXIvideo2Mat_U0_ap_done;
wire    image_filter_AXIvideo2Mat_U0_ap_continue;
wire    image_filter_AXIvideo2Mat_U0_ap_idle;
wire    image_filter_AXIvideo2Mat_U0_ap_ready;
wire   [31:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDATA;
wire    image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TVALID;
wire    image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
wire   [3:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP;
wire   [3:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TUSER;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TLAST;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TID;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDEST;
wire   [11:0] image_filter_AXIvideo2Mat_U0_img_rows_V_read;
wire   [11:0] image_filter_AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    image_filter_Loop_1_proc_U0_ap_start;
wire    image_filter_Loop_1_proc_U0_ap_done;
wire    image_filter_Loop_1_proc_U0_ap_continue;
wire    image_filter_Loop_1_proc_U0_ap_idle;
wire    image_filter_Loop_1_proc_U0_ap_ready;
wire   [31:0] image_filter_Loop_1_proc_U0_rows;
wire   [31:0] image_filter_Loop_1_proc_U0_cols;
wire   [7:0] image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_din;
wire    image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_full_n;
wire    image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_write;
wire   [7:0] image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_din;
wire    image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_full_n;
wire    image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_write;
wire   [7:0] image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_din;
wire    image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_full_n;
wire    image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_write;
wire   [7:0] image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_dout;
wire    image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_empty_n;
wire    image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_read;
wire   [7:0] image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_dout;
wire    image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_empty_n;
wire    image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_read;
wire   [7:0] image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_dout;
wire    image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_empty_n;
wire    image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_read;
wire   [1:0] image_filter_Loop_1_proc_U0_buffer_val_0_address0;
wire    image_filter_Loop_1_proc_U0_buffer_val_0_ce0;
wire    image_filter_Loop_1_proc_U0_buffer_val_0_we0;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_0_d0;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_0_q0;
wire   [1:0] image_filter_Loop_1_proc_U0_buffer_val_0_address1;
wire    image_filter_Loop_1_proc_U0_buffer_val_0_ce1;
wire    image_filter_Loop_1_proc_U0_buffer_val_0_we1;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_0_d1;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_0_q1;
wire   [1:0] image_filter_Loop_1_proc_U0_buffer_val_1_address0;
wire    image_filter_Loop_1_proc_U0_buffer_val_1_ce0;
wire    image_filter_Loop_1_proc_U0_buffer_val_1_we0;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_1_d0;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_1_q0;
wire   [1:0] image_filter_Loop_1_proc_U0_buffer_val_1_address1;
wire    image_filter_Loop_1_proc_U0_buffer_val_1_ce1;
wire    image_filter_Loop_1_proc_U0_buffer_val_1_we1;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_1_d1;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_1_q1;
wire   [1:0] image_filter_Loop_1_proc_U0_buffer_val_2_address0;
wire    image_filter_Loop_1_proc_U0_buffer_val_2_ce0;
wire    image_filter_Loop_1_proc_U0_buffer_val_2_we0;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_2_d0;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_2_q0;
wire   [1:0] image_filter_Loop_1_proc_U0_buffer_val_2_address1;
wire    image_filter_Loop_1_proc_U0_buffer_val_2_ce1;
wire    image_filter_Loop_1_proc_U0_buffer_val_2_we1;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_2_d1;
wire   [7:0] image_filter_Loop_1_proc_U0_buffer_val_2_q1;
wire    image_filter_Mat2AXIvideo_U0_ap_start;
wire    image_filter_Mat2AXIvideo_U0_ap_done;
wire    image_filter_Mat2AXIvideo_U0_ap_continue;
wire    image_filter_Mat2AXIvideo_U0_ap_idle;
wire    image_filter_Mat2AXIvideo_U0_ap_ready;
wire   [11:0] image_filter_Mat2AXIvideo_U0_img_rows_V_read;
wire   [11:0] image_filter_Mat2AXIvideo_U0_img_cols_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [31:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
wire    image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
wire    image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY;
wire   [3:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
wire   [3:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
wire    ap_sig_hs_continue;
wire    img_0_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel_din;
wire    img_0_rows_V_channel_write;
wire   [11:0] img_0_rows_V_channel_dout;
wire    img_0_rows_V_channel_empty_n;
wire    img_0_rows_V_channel_read;
wire    img_0_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel_din;
wire    img_0_cols_V_channel_write;
wire   [11:0] img_0_cols_V_channel_dout;
wire    img_0_cols_V_channel_empty_n;
wire    img_0_cols_V_channel_read;
wire    img_1_rows_V_U_ap_dummy_ce;
wire   [11:0] img_1_rows_V_din;
wire    img_1_rows_V_write;
wire   [11:0] img_1_rows_V_dout;
wire    img_1_rows_V_empty_n;
wire    img_1_rows_V_read;
wire    img_1_cols_V_U_ap_dummy_ce;
wire   [11:0] img_1_cols_V_din;
wire    img_1_cols_V_write;
wire   [11:0] img_1_cols_V_dout;
wire    img_1_cols_V_empty_n;
wire    img_1_cols_V_read;
wire    img_0_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_0_data_stream_0_V_din;
wire    img_0_data_stream_0_V_full_n;
wire    img_0_data_stream_0_V_write;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_0_V_read;
wire    img_0_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] img_0_data_stream_1_V_din;
wire    img_0_data_stream_1_V_full_n;
wire    img_0_data_stream_1_V_write;
wire   [7:0] img_0_data_stream_1_V_dout;
wire    img_0_data_stream_1_V_empty_n;
wire    img_0_data_stream_1_V_read;
wire    img_0_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] img_0_data_stream_2_V_din;
wire    img_0_data_stream_2_V_full_n;
wire    img_0_data_stream_2_V_write;
wire   [7:0] img_0_data_stream_2_V_dout;
wire    img_0_data_stream_2_V_empty_n;
wire    img_0_data_stream_2_V_read;
wire    img_1_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_0_V_din;
wire    img_1_data_stream_0_V_full_n;
wire    img_1_data_stream_0_V_write;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_0_V_read;
wire    img_1_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_1_V_din;
wire    img_1_data_stream_1_V_full_n;
wire    img_1_data_stream_1_V_write;
wire   [7:0] img_1_data_stream_1_V_dout;
wire    img_1_data_stream_1_V_empty_n;
wire    img_1_data_stream_1_V_read;
wire    img_1_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_2_V_din;
wire    img_1_data_stream_2_V_full_n;
wire    img_1_data_stream_2_V_write;
wire   [7:0] img_1_data_stream_2_V_dout;
wire    img_1_data_stream_2_V_empty_n;
wire    img_1_data_stream_2_V_read;
reg    ap_reg_procdone_image_filter_Block_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_image_filter_AXIvideo2Mat_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Loop_1_proc_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Mat2AXIvideo_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


image_filter_Block_proc image_filter_Block_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Block_proc_U0_ap_start ),
    .ap_done( image_filter_Block_proc_U0_ap_done ),
    .ap_continue( image_filter_Block_proc_U0_ap_continue ),
    .ap_idle( image_filter_Block_proc_U0_ap_idle ),
    .ap_ready( image_filter_Block_proc_U0_ap_ready ),
    .rows( image_filter_Block_proc_U0_rows ),
    .cols( image_filter_Block_proc_U0_cols ),
    .ap_return_0( image_filter_Block_proc_U0_ap_return_0 ),
    .ap_return_1( image_filter_Block_proc_U0_ap_return_1 ),
    .ap_return_2( image_filter_Block_proc_U0_ap_return_2 ),
    .ap_return_3( image_filter_Block_proc_U0_ap_return_3 )
);

image_filter_AXIvideo2Mat image_filter_AXIvideo2Mat_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_AXIvideo2Mat_U0_ap_start ),
    .ap_done( image_filter_AXIvideo2Mat_U0_ap_done ),
    .ap_continue( image_filter_AXIvideo2Mat_U0_ap_continue ),
    .ap_idle( image_filter_AXIvideo2Mat_U0_ap_idle ),
    .ap_ready( image_filter_AXIvideo2Mat_U0_ap_ready ),
    .INPUT_STREAM_TDATA( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDATA ),
    .INPUT_STREAM_TVALID( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TVALID ),
    .INPUT_STREAM_TREADY( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TREADY ),
    .INPUT_STREAM_TKEEP( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP ),
    .INPUT_STREAM_TSTRB( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB ),
    .INPUT_STREAM_TUSER( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TUSER ),
    .INPUT_STREAM_TLAST( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TLAST ),
    .INPUT_STREAM_TID( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TID ),
    .INPUT_STREAM_TDEST( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDEST ),
    .img_rows_V_read( image_filter_AXIvideo2Mat_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_AXIvideo2Mat_U0_img_cols_V_read ),
    .img_data_stream_0_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write ),
    .img_data_stream_2_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_din ),
    .img_data_stream_2_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_full_n ),
    .img_data_stream_2_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_write )
);

image_filter_Loop_1_proc image_filter_Loop_1_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Loop_1_proc_U0_ap_start ),
    .ap_done( image_filter_Loop_1_proc_U0_ap_done ),
    .ap_continue( image_filter_Loop_1_proc_U0_ap_continue ),
    .ap_idle( image_filter_Loop_1_proc_U0_ap_idle ),
    .ap_ready( image_filter_Loop_1_proc_U0_ap_ready ),
    .rows( image_filter_Loop_1_proc_U0_rows ),
    .cols( image_filter_Loop_1_proc_U0_cols ),
    .img_1_data_stream_0_V_din( image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_din ),
    .img_1_data_stream_0_V_full_n( image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_full_n ),
    .img_1_data_stream_0_V_write( image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_write ),
    .img_1_data_stream_1_V_din( image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_din ),
    .img_1_data_stream_1_V_full_n( image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_full_n ),
    .img_1_data_stream_1_V_write( image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_write ),
    .img_1_data_stream_2_V_din( image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_din ),
    .img_1_data_stream_2_V_full_n( image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_full_n ),
    .img_1_data_stream_2_V_write( image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_write ),
    .img_0_data_stream_0_V_dout( image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_dout ),
    .img_0_data_stream_0_V_empty_n( image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_empty_n ),
    .img_0_data_stream_0_V_read( image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_read ),
    .img_0_data_stream_1_V_dout( image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_dout ),
    .img_0_data_stream_1_V_empty_n( image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_empty_n ),
    .img_0_data_stream_1_V_read( image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_read ),
    .img_0_data_stream_2_V_dout( image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_dout ),
    .img_0_data_stream_2_V_empty_n( image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_empty_n ),
    .img_0_data_stream_2_V_read( image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_read ),
    .buffer_val_0_address0( image_filter_Loop_1_proc_U0_buffer_val_0_address0 ),
    .buffer_val_0_ce0( image_filter_Loop_1_proc_U0_buffer_val_0_ce0 ),
    .buffer_val_0_we0( image_filter_Loop_1_proc_U0_buffer_val_0_we0 ),
    .buffer_val_0_d0( image_filter_Loop_1_proc_U0_buffer_val_0_d0 ),
    .buffer_val_0_q0( image_filter_Loop_1_proc_U0_buffer_val_0_q0 ),
    .buffer_val_0_address1( image_filter_Loop_1_proc_U0_buffer_val_0_address1 ),
    .buffer_val_0_ce1( image_filter_Loop_1_proc_U0_buffer_val_0_ce1 ),
    .buffer_val_0_we1( image_filter_Loop_1_proc_U0_buffer_val_0_we1 ),
    .buffer_val_0_d1( image_filter_Loop_1_proc_U0_buffer_val_0_d1 ),
    .buffer_val_0_q1( image_filter_Loop_1_proc_U0_buffer_val_0_q1 ),
    .buffer_val_1_address0( image_filter_Loop_1_proc_U0_buffer_val_1_address0 ),
    .buffer_val_1_ce0( image_filter_Loop_1_proc_U0_buffer_val_1_ce0 ),
    .buffer_val_1_we0( image_filter_Loop_1_proc_U0_buffer_val_1_we0 ),
    .buffer_val_1_d0( image_filter_Loop_1_proc_U0_buffer_val_1_d0 ),
    .buffer_val_1_q0( image_filter_Loop_1_proc_U0_buffer_val_1_q0 ),
    .buffer_val_1_address1( image_filter_Loop_1_proc_U0_buffer_val_1_address1 ),
    .buffer_val_1_ce1( image_filter_Loop_1_proc_U0_buffer_val_1_ce1 ),
    .buffer_val_1_we1( image_filter_Loop_1_proc_U0_buffer_val_1_we1 ),
    .buffer_val_1_d1( image_filter_Loop_1_proc_U0_buffer_val_1_d1 ),
    .buffer_val_1_q1( image_filter_Loop_1_proc_U0_buffer_val_1_q1 ),
    .buffer_val_2_address0( image_filter_Loop_1_proc_U0_buffer_val_2_address0 ),
    .buffer_val_2_ce0( image_filter_Loop_1_proc_U0_buffer_val_2_ce0 ),
    .buffer_val_2_we0( image_filter_Loop_1_proc_U0_buffer_val_2_we0 ),
    .buffer_val_2_d0( image_filter_Loop_1_proc_U0_buffer_val_2_d0 ),
    .buffer_val_2_q0( image_filter_Loop_1_proc_U0_buffer_val_2_q0 ),
    .buffer_val_2_address1( image_filter_Loop_1_proc_U0_buffer_val_2_address1 ),
    .buffer_val_2_ce1( image_filter_Loop_1_proc_U0_buffer_val_2_ce1 ),
    .buffer_val_2_we1( image_filter_Loop_1_proc_U0_buffer_val_2_we1 ),
    .buffer_val_2_d1( image_filter_Loop_1_proc_U0_buffer_val_2_d1 ),
    .buffer_val_2_q1( image_filter_Loop_1_proc_U0_buffer_val_2_q1 )
);

image_filter_Mat2AXIvideo image_filter_Mat2AXIvideo_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Mat2AXIvideo_U0_ap_start ),
    .ap_done( image_filter_Mat2AXIvideo_U0_ap_done ),
    .ap_continue( image_filter_Mat2AXIvideo_U0_ap_continue ),
    .ap_idle( image_filter_Mat2AXIvideo_U0_ap_idle ),
    .ap_ready( image_filter_Mat2AXIvideo_U0_ap_ready ),
    .img_rows_V_read( image_filter_Mat2AXIvideo_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_Mat2AXIvideo_U0_img_cols_V_read ),
    .img_data_stream_0_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout ),
    .img_data_stream_0_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n ),
    .img_data_stream_0_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read ),
    .img_data_stream_1_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout ),
    .img_data_stream_1_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n ),
    .img_data_stream_1_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read ),
    .img_data_stream_2_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_dout ),
    .img_data_stream_2_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n ),
    .img_data_stream_2_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_read ),
    .OUTPUT_STREAM_TDATA( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA ),
    .OUTPUT_STREAM_TVALID( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID ),
    .OUTPUT_STREAM_TREADY( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY ),
    .OUTPUT_STREAM_TKEEP( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP ),
    .OUTPUT_STREAM_TSTRB( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB ),
    .OUTPUT_STREAM_TUSER( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER ),
    .OUTPUT_STREAM_TLAST( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST ),
    .OUTPUT_STREAM_TID( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TID ),
    .OUTPUT_STREAM_TDEST( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST )
);

FIFO_image_filter_img_0_rows_V_channel img_0_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel_din ),
    .if_full_n( img_0_rows_V_channel_full_n ),
    .if_write( img_0_rows_V_channel_write ),
    .if_dout( img_0_rows_V_channel_dout ),
    .if_empty_n( img_0_rows_V_channel_empty_n ),
    .if_read( img_0_rows_V_channel_read )
);

FIFO_image_filter_img_0_cols_V_channel img_0_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel_din ),
    .if_full_n( img_0_cols_V_channel_full_n ),
    .if_write( img_0_cols_V_channel_write ),
    .if_dout( img_0_cols_V_channel_dout ),
    .if_empty_n( img_0_cols_V_channel_empty_n ),
    .if_read( img_0_cols_V_channel_read )
);

FIFO_image_filter_img_1_rows_V img_1_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_rows_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_rows_V_U_ap_dummy_ce ),
    .if_din( img_1_rows_V_din ),
    .if_full_n( img_1_rows_V_full_n ),
    .if_write( img_1_rows_V_write ),
    .if_dout( img_1_rows_V_dout ),
    .if_empty_n( img_1_rows_V_empty_n ),
    .if_read( img_1_rows_V_read )
);

FIFO_image_filter_img_1_cols_V img_1_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_cols_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_cols_V_U_ap_dummy_ce ),
    .if_din( img_1_cols_V_din ),
    .if_full_n( img_1_cols_V_full_n ),
    .if_write( img_1_cols_V_write ),
    .if_dout( img_1_cols_V_dout ),
    .if_empty_n( img_1_cols_V_empty_n ),
    .if_read( img_1_cols_V_read )
);

FIFO_image_filter_img_0_data_stream_0_V img_0_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_0_V_din ),
    .if_full_n( img_0_data_stream_0_V_full_n ),
    .if_write( img_0_data_stream_0_V_write ),
    .if_dout( img_0_data_stream_0_V_dout ),
    .if_empty_n( img_0_data_stream_0_V_empty_n ),
    .if_read( img_0_data_stream_0_V_read )
);

FIFO_image_filter_img_0_data_stream_1_V img_0_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_1_V_din ),
    .if_full_n( img_0_data_stream_1_V_full_n ),
    .if_write( img_0_data_stream_1_V_write ),
    .if_dout( img_0_data_stream_1_V_dout ),
    .if_empty_n( img_0_data_stream_1_V_empty_n ),
    .if_read( img_0_data_stream_1_V_read )
);

FIFO_image_filter_img_0_data_stream_2_V img_0_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_2_V_din ),
    .if_full_n( img_0_data_stream_2_V_full_n ),
    .if_write( img_0_data_stream_2_V_write ),
    .if_dout( img_0_data_stream_2_V_dout ),
    .if_empty_n( img_0_data_stream_2_V_empty_n ),
    .if_read( img_0_data_stream_2_V_read )
);

FIFO_image_filter_img_1_data_stream_0_V img_1_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_din ),
    .if_full_n( img_1_data_stream_0_V_full_n ),
    .if_write( img_1_data_stream_0_V_write ),
    .if_dout( img_1_data_stream_0_V_dout ),
    .if_empty_n( img_1_data_stream_0_V_empty_n ),
    .if_read( img_1_data_stream_0_V_read )
);

FIFO_image_filter_img_1_data_stream_1_V img_1_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_1_V_din ),
    .if_full_n( img_1_data_stream_1_V_full_n ),
    .if_write( img_1_data_stream_1_V_write ),
    .if_dout( img_1_data_stream_1_V_dout ),
    .if_empty_n( img_1_data_stream_1_V_empty_n ),
    .if_read( img_1_data_stream_1_V_read )
);

FIFO_image_filter_img_1_data_stream_2_V img_1_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_2_V_din ),
    .if_full_n( img_1_data_stream_2_V_full_n ),
    .if_write( img_1_data_stream_2_V_write ),
    .if_dout( img_1_data_stream_2_V_dout ),
    .if_empty_n( img_1_data_stream_2_V_empty_n ),
    .if_read( img_1_data_stream_2_V_read )
);



/// ap_reg_procdone_image_filter_AXIvideo2Mat_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_AXIvideo2Mat_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Block_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Block_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Block_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Block_proc_U0 <= ap_const_logic_0;
        end else if ((image_filter_Block_proc_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_image_filter_Block_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Loop_1_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Loop_1_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Loop_1_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Loop_1_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Loop_1_proc_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Loop_1_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Mat2AXIvideo_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Mat2AXIvideo_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (image_filter_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_0_cols_V_channel_full_n))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (image_filter_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_0_rows_V_channel_full_n))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (image_filter_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_0;
        end else if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_1_cols_V_full_n))) begin
            ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (image_filter_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_0;
        end else if (((image_filter_Block_proc_U0_ap_done == ap_const_logic_1) & (img_1_rows_V_full_n == ap_const_logic_1))) begin
            ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_rows_V_full_n)
begin
    if ((ap_reg_ready_img_1_rows_V_full_n == ap_const_logic_1)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (image_filter_Block_proc_U0_ap_idle or image_filter_AXIvideo2Mat_U0_ap_idle or image_filter_Loop_1_proc_U0_ap_idle or image_filter_Mat2AXIvideo_U0_ap_idle or img_0_rows_V_channel_empty_n or img_0_cols_V_channel_empty_n or img_1_rows_V_empty_n or img_1_cols_V_empty_n)
begin
    if (((image_filter_Block_proc_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_idle) & (ap_const_logic_1 == image_filter_Loop_1_proc_U0_ap_idle) & (ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_idle) & (ap_const_logic_0 == img_0_rows_V_channel_empty_n) & (ap_const_logic_0 == img_0_cols_V_channel_empty_n) & (ap_const_logic_0 == img_1_rows_V_empty_n) & (ap_const_logic_0 == img_1_cols_V_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (image_filter_Mat2AXIvideo_U0_ap_done)
begin
    if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (img_0_cols_V_channel_full_n or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_sig_ready_img_0_cols_V_channel_full_n = img_0_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (img_0_rows_V_channel_full_n or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_sig_ready_img_0_rows_V_channel_full_n = img_0_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_cols_V_full_n assign process. ///
always @ (img_1_cols_V_full_n or ap_reg_ready_img_1_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_cols_V_full_n)) begin
        ap_sig_ready_img_1_cols_V_full_n = img_1_cols_V_full_n;
    end else begin
        ap_sig_ready_img_1_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_rows_V_full_n assign process. ///
always @ (img_1_rows_V_full_n or ap_reg_ready_img_1_rows_V_full_n)
begin
    if ((ap_reg_ready_img_1_rows_V_full_n == ap_const_logic_0)) begin
        ap_sig_ready_img_1_rows_V_full_n = img_1_rows_V_full_n;
    end else begin
        ap_sig_ready_img_1_rows_V_full_n = ap_const_logic_1;
    end
end

/// image_filter_Block_proc_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_1_rows_V_full_n or ap_sig_ready_img_0_rows_V_channel_full_n or ap_sig_ready_img_1_cols_V_full_n or ap_sig_ready_img_0_cols_V_channel_full_n)
begin
    if (((ap_sig_ready_img_1_rows_V_full_n == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_ready_img_0_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_cols_V_channel_full_n))) begin
        image_filter_Block_proc_U0_ap_continue = ap_const_logic_1;
    end else begin
        image_filter_Block_proc_U0_ap_continue = ap_const_logic_0;
    end
end
assign INPUT_STREAM_TREADY = image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
assign OUTPUT_STREAM_TDATA = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
assign OUTPUT_STREAM_TDEST = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
assign OUTPUT_STREAM_TID = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
assign OUTPUT_STREAM_TKEEP = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
assign OUTPUT_STREAM_TLAST = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
assign OUTPUT_STREAM_TSTRB = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
assign OUTPUT_STREAM_TUSER = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
assign OUTPUT_STREAM_TVALID = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = image_filter_AXIvideo2Mat_U0_ap_ready;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDATA = INPUT_STREAM_TDATA;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDEST = INPUT_STREAM_TDEST;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TID = INPUT_STREAM_TID;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP = INPUT_STREAM_TKEEP;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TLAST = INPUT_STREAM_TLAST;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB = INPUT_STREAM_TSTRB;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TUSER = INPUT_STREAM_TUSER;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TVALID = INPUT_STREAM_TVALID;
assign image_filter_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
assign image_filter_AXIvideo2Mat_U0_ap_start = (ap_start & img_0_rows_V_channel_empty_n & img_0_cols_V_channel_empty_n);
assign image_filter_AXIvideo2Mat_U0_img_cols_V_read = img_0_cols_V_channel_dout;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = img_0_data_stream_0_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = img_0_data_stream_1_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_full_n = img_0_data_stream_2_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_rows_V_read = img_0_rows_V_channel_dout;
assign image_filter_Block_proc_U0_ap_start = ap_start;
assign image_filter_Block_proc_U0_cols = cols;
assign image_filter_Block_proc_U0_rows = rows;
assign image_filter_Loop_1_proc_U0_ap_continue = ap_const_logic_1;
assign image_filter_Loop_1_proc_U0_ap_start = ap_start;
assign image_filter_Loop_1_proc_U0_buffer_val_0_q0 = ap_const_lv8_0;
assign image_filter_Loop_1_proc_U0_buffer_val_0_q1 = ap_const_lv8_0;
assign image_filter_Loop_1_proc_U0_buffer_val_1_q0 = ap_const_lv8_0;
assign image_filter_Loop_1_proc_U0_buffer_val_1_q1 = ap_const_lv8_0;
assign image_filter_Loop_1_proc_U0_buffer_val_2_q0 = ap_const_lv8_0;
assign image_filter_Loop_1_proc_U0_buffer_val_2_q1 = ap_const_lv8_0;
assign image_filter_Loop_1_proc_U0_cols = cols;
assign image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_dout = img_0_data_stream_0_V_dout;
assign image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_empty_n = img_0_data_stream_0_V_empty_n;
assign image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_dout = img_0_data_stream_1_V_dout;
assign image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_empty_n = img_0_data_stream_1_V_empty_n;
assign image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_dout = img_0_data_stream_2_V_dout;
assign image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_empty_n = img_0_data_stream_2_V_empty_n;
assign image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_full_n = img_1_data_stream_0_V_full_n;
assign image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_full_n = img_1_data_stream_1_V_full_n;
assign image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_full_n = img_1_data_stream_2_V_full_n;
assign image_filter_Loop_1_proc_U0_rows = rows;
assign image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY = OUTPUT_STREAM_TREADY;
assign image_filter_Mat2AXIvideo_U0_ap_continue = ap_sig_hs_continue;
assign image_filter_Mat2AXIvideo_U0_ap_start = (img_1_rows_V_empty_n & img_1_cols_V_empty_n);
assign image_filter_Mat2AXIvideo_U0_img_cols_V_read = img_1_cols_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout = img_1_data_stream_0_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n = img_1_data_stream_0_V_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout = img_1_data_stream_1_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n = img_1_data_stream_1_V_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_dout = img_1_data_stream_2_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n = img_1_data_stream_2_V_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_rows_V_read = img_1_rows_V_dout;
assign img_0_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_1;
assign img_0_cols_V_channel_read = image_filter_AXIvideo2Mat_U0_ap_ready;
assign img_0_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel;
assign img_0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_0_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din;
assign img_0_data_stream_0_V_read = image_filter_Loop_1_proc_U0_img_0_data_stream_0_V_read;
assign img_0_data_stream_0_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write;
assign img_0_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_1_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din;
assign img_0_data_stream_1_V_read = image_filter_Loop_1_proc_U0_img_0_data_stream_1_V_read;
assign img_0_data_stream_1_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write;
assign img_0_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_2_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_din;
assign img_0_data_stream_2_V_read = image_filter_Loop_1_proc_U0_img_0_data_stream_2_V_read;
assign img_0_data_stream_2_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_write;
assign img_0_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_0;
assign img_0_rows_V_channel_read = image_filter_AXIvideo2Mat_U0_ap_ready;
assign img_0_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel;
assign img_1_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_cols_V_din = image_filter_Block_proc_U0_ap_return_3;
assign img_1_cols_V_read = image_filter_Mat2AXIvideo_U0_ap_ready;
assign img_1_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V;
assign img_1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_0_V_din = image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_din;
assign img_1_data_stream_0_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read;
assign img_1_data_stream_0_V_write = image_filter_Loop_1_proc_U0_img_1_data_stream_0_V_write;
assign img_1_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_1_V_din = image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_din;
assign img_1_data_stream_1_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read;
assign img_1_data_stream_1_V_write = image_filter_Loop_1_proc_U0_img_1_data_stream_1_V_write;
assign img_1_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_2_V_din = image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_din;
assign img_1_data_stream_2_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_read;
assign img_1_data_stream_2_V_write = image_filter_Loop_1_proc_U0_img_1_data_stream_2_V_write;
assign img_1_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_rows_V_din = image_filter_Block_proc_U0_ap_return_2;
assign img_1_rows_V_read = image_filter_Mat2AXIvideo_U0_ap_ready;
assign img_1_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V;


endmodule //image_filter

